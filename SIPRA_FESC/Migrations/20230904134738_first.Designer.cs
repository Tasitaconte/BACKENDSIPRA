// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIPRA_FESC.Entities;

#nullable disable

namespace SIPRA_FESC.Migrations
{
    [DbContext(typeof(SipraContext))]
    [Migration("20230904134738_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SIPRA_FESC.Entities.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Carrera1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("carrera");

                    b.Property<string>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_carrera")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCarrera" }, "id_carrera")
                        .IsUnique();

                    b.ToTable("carrera", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carrera1 = "Ingenieria de Software",
                            IdCarrera = "34ec1ba1-666b-43cd-b1a0-074ebb2f980d"
                        },
                        new
                        {
                            Id = 2,
                            Carrera1 = "Diseño y Administración de Modas",
                            IdCarrera = "5342eb64-ae4d-4284-a985-50a2e815f7fa"
                        },
                        new
                        {
                            Id = 3,
                            Carrera1 = "Diseño Grafico",
                            IdCarrera = "87f6ee04-c732-4ac9-a7c5-ec9e84106774"
                        },
                        new
                        {
                            Id = 4,
                            Carrera1 = "Gestión Logistica Empresarial",
                            IdCarrera = "45107200-15df-4706-9b1a-224e8ff2c133"
                        },
                        new
                        {
                            Id = 5,
                            Carrera1 = "Administración Turística y Hotelera",
                            IdCarrera = "a49961fe-889e-4aa6-97d2-bf9fc5ea0abc"
                        },
                        new
                        {
                            Id = 6,
                            Carrera1 = "Administración Negocios Internacionales",
                            IdCarrera = "12ccc31a-dcb7-444a-8022-8b765e79eed5"
                        },
                        new
                        {
                            Id = 7,
                            Carrera1 = "Administración financiera",
                            IdCarrera = "dc396fba-141f-4f6e-b672-7d78985e1aed"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("celular");

                    b.Property<string>("CelularJefeInmediato")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("celular_jefe_inmediato");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direccion");

                    b.Property<string>("IdEmpresa")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_empresa");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estudiante");

                    b.Property<int>("IdTipoConvenio")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tipo_convenio");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreJefeInmedianto")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombre_jefe_inmedianto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEstudiante" }, "id_estudiante");

                    b.HasIndex(new[] { "IdTipoConvenio" }, "id_tipo_convenio");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Evaluacion1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("evaluacion");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estudiante");

                    b.Property<string>("IdEvaluacion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_evaluacion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEstudiante" }, "id_estudiante")
                        .HasDatabaseName("id_estudiante1");

                    b.ToTable("evaluacion", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Formulario1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("formulario");

                    b.Property<string>("IdFormulario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_formulario")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFormulario" }, "id_formulario")
                        .IsUnique();

                    b.ToTable("formularios", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.FormulariosCargado", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario");

                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdFormularioCargado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_formulario_cargado")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("Url")
                        .HasColumnType("int(11)")
                        .HasColumnName("url");

                    b.HasKey("IdUsuario", "Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFormularioCargado" }, "id_formulario_cargado")
                        .IsUnique();

                    b.ToTable("formularios_cargados", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_rol")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Rol1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("rol");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdRol" }, "id_rol")
                        .IsUnique();

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdRol = "7f5f385f-e4ef-45f6-a9b3-38d70ff13450",
                            Rol1 = "Extension"
                        },
                        new
                        {
                            Id = 2,
                            IdRol = "085bb635-553c-46da-a1bb-f2bd1c72e975",
                            Rol1 = "Docente"
                        },
                        new
                        {
                            Id = 3,
                            IdRol = "34e9a774-8aea-42f3-a062-a7ab61b74177",
                            Rol1 = "Estudiante"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoConvenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("convenio");

                    b.Property<string>("IdTipoConvenio")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_tipo_convenio")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipoConvenio" }, "id_tipo_convenio")
                        .IsUnique()
                        .HasDatabaseName("id_tipo_convenio1");

                    b.ToTable("tipo_convenio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Convenio = "CONVENIO",
                            IdTipoConvenio = "d2f78570-e21f-48bd-8b89-e1387fc78980"
                        },
                        new
                        {
                            Id = 2,
                            Convenio = "TRABAJA CON EMPRESA",
                            IdTipoConvenio = "461fac44-0ea9-4100-99a3-d4058034cc82"
                        },
                        new
                        {
                            Id = 3,
                            Convenio = "EMPRESA PROPIA",
                            IdTipoConvenio = "5ff27100-dbaf-4cc0-812e-2b6adda70c9c"
                        },
                        new
                        {
                            Id = 4,
                            Convenio = "INVESTIGACIÓN",
                            IdTipoConvenio = "c509b7ba-007d-4378-8f55-b0a7f1d0bb14"
                        },
                        new
                        {
                            Id = 5,
                            Convenio = "APRENDIZ UNIVERSITARIO",
                            IdTipoConvenio = "c5ca5bb6-6d9a-4018-a4c2-88a8b3914f89"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdTipoIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_tipo_identificacion")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("TipoIdentificacion1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tipo_identificacion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipoIdentificacion" }, "id_tipo_identificacion")
                        .IsUnique();

                    b.ToTable("tipo_identificacion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdTipoIdentificacion = "b2bf5a02-91a3-4770-9491-5c3f665c3ebf",
                            TipoIdentificacion1 = "C.C"
                        },
                        new
                        {
                            Id = 2,
                            IdTipoIdentificacion = "60f42a69-e1a7-45b8-bd6d-a8f52f0fceba",
                            TipoIdentificacion1 = "T.I"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<int?>("IdCarrera")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_carrera");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_rol");

                    b.Property<int?>("IdTipoDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tipo_documento");

                    b.Property<string>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_usuario")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nombres");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("numero_identificacion")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "IdCarrera" }, "id_carrera")
                        .HasDatabaseName("id_carrera1");

                    b.HasIndex(new[] { "IdRol" }, "id_rol")
                        .HasDatabaseName("id_rol1");

                    b.HasIndex(new[] { "IdTipoDocumento" }, "id_tipo_documento");

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Empresa", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("empresa_ibfk_1");

                    b.HasOne("SIPRA_FESC.Entities.TipoConvenio", "IdTipoConvenioNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdTipoConvenio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("empresa_ibfk_2");

                    b.Navigation("IdEstudianteNavigation");

                    b.Navigation("IdTipoConvenioNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Evaluacion", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Evaluacions")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("evaluacion_ibfk_1");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.FormulariosCargado", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("FormulariosCargados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("formularios_cargados_ibfk_1");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Carrera", "IdCarreraNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_2");

                    b.HasOne("SIPRA_FESC.Entities.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_1");

                    b.HasOne("SIPRA_FESC.Entities.TipoIdentificacion", "IdTipoDocumentoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_3");

                    b.Navigation("IdCarreraNavigation");

                    b.Navigation("IdRolNavigation");

                    b.Navigation("IdTipoDocumentoNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Carrera", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoConvenio", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoIdentificacion", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Evaluacions");

                    b.Navigation("FormulariosCargados");
                });
#pragma warning restore 612, 618
        }
    }
}
