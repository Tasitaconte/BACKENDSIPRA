// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIPRA_FESC.Entities;

#nullable disable

namespace SIPRA_FESC.Migrations
{
    [DbContext(typeof(SipraContext))]
    [Migration("20230904014015_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SIPRA_FESC.Entities.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Carrera1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("carrera");

                    b.Property<string>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_carrera")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCarrera" }, "id_carrera")
                        .IsUnique();

                    b.ToTable("carrera", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carrera1 = "Ingenieria de Software",
                            IdCarrera = "98296008-3386-4c9d-8040-91959d1852d4"
                        },
                        new
                        {
                            Id = 2,
                            Carrera1 = "Diseño y Administración de Modas",
                            IdCarrera = "b4d17cfe-223d-4478-8314-2f72e8fc9c90"
                        },
                        new
                        {
                            Id = 3,
                            Carrera1 = "Diseño Grafico",
                            IdCarrera = "9a8ef9ae-9ae3-4a7e-8b5a-adb5195b66e3"
                        },
                        new
                        {
                            Id = 4,
                            Carrera1 = "Gestión Logistica Empresarial",
                            IdCarrera = "a0de7fa1-62dc-4840-924d-d326464ce83e"
                        },
                        new
                        {
                            Id = 5,
                            Carrera1 = "Administración Turística y Hotelera",
                            IdCarrera = "1d0200f0-a109-420d-a69f-dc55c5ec6361"
                        },
                        new
                        {
                            Id = 6,
                            Carrera1 = "Administración Negocios Internacionales",
                            IdCarrera = "26c5ecd8-73f5-4703-9da1-7bcc8ab052f0"
                        },
                        new
                        {
                            Id = 7,
                            Carrera1 = "Administración financiera",
                            IdCarrera = "720357c1-d3e7-46ac-a60f-1c7019dfd055"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("celular");

                    b.Property<string>("CelularJefeInmediato")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("celular_jefe_inmediato");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direccion");

                    b.Property<string>("IdEmpresa")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_empresa");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estudiante");

                    b.Property<int>("IdTipoConvenio")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tipo_convenio");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreJefeInmedianto")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombre_jefe_inmedianto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEstudiante" }, "id_estudiante");

                    b.HasIndex(new[] { "IdTipoConvenio" }, "id_tipo_convenio");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Evaluacion1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("evaluacion");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estudiante");

                    b.Property<string>("IdEvaluacion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_evaluacion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEstudiante" }, "id_estudiante")
                        .HasDatabaseName("id_estudiante1");

                    b.ToTable("evaluacion", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Formulario1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("formulario");

                    b.Property<string>("IdFormulario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_formulario")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFormulario" }, "id_formulario")
                        .IsUnique();

                    b.ToTable("formularios", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.FormulariosCargado", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario");

                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdFormularioCargado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_formulario_cargado")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("Url")
                        .HasColumnType("int(11)")
                        .HasColumnName("url");

                    b.HasKey("IdUsuario", "Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFormularioCargado" }, "id_formulario_cargado")
                        .IsUnique();

                    b.ToTable("formularios_cargados", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_rol")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Rol1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("rol");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdRol" }, "id_rol")
                        .IsUnique();

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdRol = "e0ddde3c-8694-44c2-94c0-a6212dcb894a",
                            Rol1 = "Extension"
                        },
                        new
                        {
                            Id = 2,
                            IdRol = "1a7e0223-4723-47b7-bb3e-41216667447e",
                            Rol1 = "Docente"
                        },
                        new
                        {
                            Id = 3,
                            IdRol = "09549090-5a33-4d93-8065-b0fd38d41ed5",
                            Rol1 = "Estudiante"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoConvenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("convenio");

                    b.Property<string>("IdTipoConvenio")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_tipo_convenio")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipoConvenio" }, "id_tipo_convenio")
                        .IsUnique()
                        .HasDatabaseName("id_tipo_convenio1");

                    b.ToTable("tipo_convenio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Convenio = "CONVENIO",
                            IdTipoConvenio = "b74bcbe4-93de-4f07-a688-f7681e883695"
                        },
                        new
                        {
                            Id = 2,
                            Convenio = "TRABAJA CON EMPRESA",
                            IdTipoConvenio = "e6243cb5-b456-4285-9e21-bdfa019c7947"
                        },
                        new
                        {
                            Id = 3,
                            Convenio = "EMPRESA PROPIA",
                            IdTipoConvenio = "aa3c6c0a-1c44-4d3b-a370-f84b6b6e441b"
                        },
                        new
                        {
                            Id = 4,
                            Convenio = "INVESTIGACIÓN",
                            IdTipoConvenio = "38c1ebc6-8a59-4462-be1f-56dee8d5acb9"
                        },
                        new
                        {
                            Id = 5,
                            Convenio = "APRENDIZ UNIVERSITARIO",
                            IdTipoConvenio = "182bfc4d-a7ca-4261-8f04-a2e4573118e2"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdTipoIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_tipo_identificacion")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("TipoIdentificacion1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tipo_identificacion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipoIdentificacion" }, "id_tipo_identificacion")
                        .IsUnique();

                    b.ToTable("tipo_identificacion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdTipoIdentificacion = "c7a96a81-9eb3-4fb4-8606-25d7d55676f6",
                            TipoIdentificacion1 = "C.C"
                        },
                        new
                        {
                            Id = 2,
                            IdTipoIdentificacion = "2ae058b0-40fa-4a54-9671-3bd4aa33f1a3",
                            TipoIdentificacion1 = "T.I"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<int?>("IdCarrera")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_carrera");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_rol");

                    b.Property<int?>("IdTipoDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tipo_documento");

                    b.Property<string>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_usuario")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nombres");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "IdCarrera" }, "id_carrera")
                        .HasDatabaseName("id_carrera1");

                    b.HasIndex(new[] { "IdRol" }, "id_rol")
                        .HasDatabaseName("id_rol1");

                    b.HasIndex(new[] { "IdTipoDocumento" }, "id_tipo_documento");

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Empresa", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("empresa_ibfk_1");

                    b.HasOne("SIPRA_FESC.Entities.TipoConvenio", "IdTipoConvenioNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdTipoConvenio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("empresa_ibfk_2");

                    b.Navigation("IdEstudianteNavigation");

                    b.Navigation("IdTipoConvenioNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Evaluacion", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Evaluacions")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("evaluacion_ibfk_1");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.FormulariosCargado", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("FormulariosCargados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("formularios_cargados_ibfk_1");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Carrera", "IdCarreraNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_2");

                    b.HasOne("SIPRA_FESC.Entities.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_1");

                    b.HasOne("SIPRA_FESC.Entities.TipoIdentificacion", "IdTipoDocumentoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_3");

                    b.Navigation("IdCarreraNavigation");

                    b.Navigation("IdRolNavigation");

                    b.Navigation("IdTipoDocumentoNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Carrera", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoConvenio", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoIdentificacion", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Evaluacions");

                    b.Navigation("FormulariosCargados");
                });
#pragma warning restore 612, 618
        }
    }
}
