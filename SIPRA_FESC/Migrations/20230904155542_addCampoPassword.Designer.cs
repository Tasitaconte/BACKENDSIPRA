// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIPRA_FESC.Entities;

#nullable disable

namespace SIPRA_FESC.Migrations
{
    [DbContext(typeof(SipraContext))]
    [Migration("20230904155542_addCampoPassword")]
    partial class addCampoPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SIPRA_FESC.Entities.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Carrera1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("carrera");

                    b.Property<string>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_carrera")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCarrera" }, "id_carrera")
                        .IsUnique();

                    b.ToTable("carrera", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carrera1 = "Ingenieria de Software",
                            IdCarrera = "e6ce6313-d653-4fe1-aa2e-285ab0c7bd35"
                        },
                        new
                        {
                            Id = 2,
                            Carrera1 = "Diseño y Administración de Modas",
                            IdCarrera = "55559c64-cedc-4e4a-a9c2-f9496b42028b"
                        },
                        new
                        {
                            Id = 3,
                            Carrera1 = "Diseño Grafico",
                            IdCarrera = "22be452f-0a21-49cf-be11-05c2179a5065"
                        },
                        new
                        {
                            Id = 4,
                            Carrera1 = "Gestión Logistica Empresarial",
                            IdCarrera = "c8829702-0b25-4e96-8cd1-b1eab4cb516c"
                        },
                        new
                        {
                            Id = 5,
                            Carrera1 = "Administración Turística y Hotelera",
                            IdCarrera = "0b864717-c2ca-4730-bf11-be14c799515d"
                        },
                        new
                        {
                            Id = 6,
                            Carrera1 = "Administración Negocios Internacionales",
                            IdCarrera = "05ce4ce3-5afd-4f56-879f-cebde2e3e1db"
                        },
                        new
                        {
                            Id = 7,
                            Carrera1 = "Administración financiera",
                            IdCarrera = "f2aa2900-7300-4a00-8933-84b9a5b8c9f1"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("celular");

                    b.Property<string>("CelularJefeInmediato")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("celular_jefe_inmediato");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direccion");

                    b.Property<string>("IdEmpresa")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_empresa");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estudiante");

                    b.Property<int>("IdTipoConvenio")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tipo_convenio");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreJefeInmedianto")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombre_jefe_inmedianto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEstudiante" }, "id_estudiante");

                    b.HasIndex(new[] { "IdTipoConvenio" }, "id_tipo_convenio");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Evaluacion1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("evaluacion");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_estudiante");

                    b.Property<string>("IdEvaluacion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_evaluacion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEstudiante" }, "id_estudiante")
                        .HasDatabaseName("id_estudiante1");

                    b.ToTable("evaluacion", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Formulario1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("formulario");

                    b.Property<string>("IdFormulario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_formulario")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFormulario" }, "id_formulario")
                        .IsUnique();

                    b.ToTable("formularios", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.FormulariosCargado", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario");

                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdFormularioCargado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_formulario_cargado")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("Url")
                        .HasColumnType("int(11)")
                        .HasColumnName("url");

                    b.HasKey("IdUsuario", "Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdFormularioCargado" }, "id_formulario_cargado")
                        .IsUnique();

                    b.ToTable("formularios_cargados", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_rol")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Rol1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("rol");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdRol" }, "id_rol")
                        .IsUnique();

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdRol = "20316fda-c712-4534-834d-f28e09c7752e",
                            Rol1 = "Extension"
                        },
                        new
                        {
                            Id = 2,
                            IdRol = "a5a61748-d30b-4852-8f92-4ad303dbdc2f",
                            Rol1 = "Docente"
                        },
                        new
                        {
                            Id = 3,
                            IdRol = "35fbdee7-272f-469a-a004-b49b332876dd",
                            Rol1 = "Estudiante"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoConvenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("convenio");

                    b.Property<string>("IdTipoConvenio")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_tipo_convenio")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipoConvenio" }, "id_tipo_convenio")
                        .IsUnique()
                        .HasDatabaseName("id_tipo_convenio1");

                    b.ToTable("tipo_convenio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Convenio = "CONVENIO",
                            IdTipoConvenio = "7aef4583-8f03-4cf4-8eef-1afc2e58a7e5"
                        },
                        new
                        {
                            Id = 2,
                            Convenio = "TRABAJA CON EMPRESA",
                            IdTipoConvenio = "ece2e070-5c7c-485d-9a5a-cfb65a13831c"
                        },
                        new
                        {
                            Id = 3,
                            Convenio = "EMPRESA PROPIA",
                            IdTipoConvenio = "62fc5550-188b-48f1-bd82-e7507cf2d7a9"
                        },
                        new
                        {
                            Id = 4,
                            Convenio = "INVESTIGACIÓN",
                            IdTipoConvenio = "d4105488-bc13-4839-a4c5-b67d4a3672c7"
                        },
                        new
                        {
                            Id = 5,
                            Convenio = "APRENDIZ UNIVERSITARIO",
                            IdTipoConvenio = "a5b44323-fbdf-41b0-b498-1cb74e886b43"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("IdTipoIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_tipo_identificacion")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("TipoIdentificacion1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tipo_identificacion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdTipoIdentificacion" }, "id_tipo_identificacion")
                        .IsUnique();

                    b.ToTable("tipo_identificacion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdTipoIdentificacion = "6b46599d-9e27-4ad2-98cd-cd39c75b612a",
                            TipoIdentificacion1 = "C.C"
                        },
                        new
                        {
                            Id = 2,
                            IdTipoIdentificacion = "f266373a-d3ec-49fc-99c0-32bfb02b74d1",
                            TipoIdentificacion1 = "T.I"
                        });
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<int?>("IdCarrera")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_carrera");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_rol");

                    b.Property<int?>("IdTipoDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tipo_documento");

                    b.Property<string>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_usuario")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nombres");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("numero_identificacion")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "IdCarrera" }, "id_carrera")
                        .HasDatabaseName("id_carrera1");

                    b.HasIndex(new[] { "IdRol" }, "id_rol")
                        .HasDatabaseName("id_rol1");

                    b.HasIndex(new[] { "IdTipoDocumento" }, "id_tipo_documento");

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Empresa", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("empresa_ibfk_1");

                    b.HasOne("SIPRA_FESC.Entities.TipoConvenio", "IdTipoConvenioNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdTipoConvenio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("empresa_ibfk_2");

                    b.Navigation("IdEstudianteNavigation");

                    b.Navigation("IdTipoConvenioNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Evaluacion", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Evaluacions")
                        .HasForeignKey("IdEstudiante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("evaluacion_ibfk_1");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.FormulariosCargado", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("FormulariosCargados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("formularios_cargados_ibfk_1");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.HasOne("SIPRA_FESC.Entities.Carrera", "IdCarreraNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_2");

                    b.HasOne("SIPRA_FESC.Entities.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_1");

                    b.HasOne("SIPRA_FESC.Entities.TipoIdentificacion", "IdTipoDocumentoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("usuario_ibfk_3");

                    b.Navigation("IdCarreraNavigation");

                    b.Navigation("IdRolNavigation");

                    b.Navigation("IdTipoDocumentoNavigation");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Carrera", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoConvenio", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.TipoIdentificacion", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SIPRA_FESC.Entities.Usuario", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Evaluacions");

                    b.Navigation("FormulariosCargados");
                });
#pragma warning restore 612, 618
        }
    }
}
